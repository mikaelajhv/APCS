import java.util.ArrayList;
import java.util.Arrays;

public class Statistics {

	private int[] data;
	
	public Statistics(int max)
	{
		data = new int[max];
	}
	
	public void read(String name)
	{
		ArrayReader a = new ArrayReader(name);
		a.fillArray(data);
		
	}
	
	/*
	public static double sum(double[] data)
	{
		
	}
	
	/*
	a.	Find the average of the list of numbers.
	b.	Determine the difference of each number from the average, and square each difference.  Sum all the differences.
	c.	Divide this sum by (the number of values - 1).
	d.	Take the square root of the above division problem from step c.
*/
	
	public double avg(int[] data)
	{
		double sum = 0;
		double avg = 0;
		
		for(double e: data)
		{
			sum = sum + e;
		}
		avg = sum/data.length;
		double roundedAvg = (double)Math.round(avg * 1000d) / 1000d;
		
		return roundedAvg;
	}
	
	public double sDev(int[] data)
	{
		double average = avg(data);
		double sumDiff = 0;
		
		for(int i = 0; i <= data.length - 1; i++)
		{
			double e = Math.pow((Math.abs(average - data[i])), 2);
			sumDiff += e;
		}
		double stDev = Math.sqrt(sumDiff/999);
		double roundedSDev = (double)Math.round(stDev * 100d) / 100d;
		
		return roundedSDev;
	}
	
	public String mode(int[] data)
	{
		ArrayList<String> modes = new ArrayList<String>();
		int modeCount = 0;
		int current = 0;
		
		for(int i = 0; i <= data.length - 1; i++) //goes through array
		{
			int currentCount = 0;
			for(int j = 0; j <= data.length - 1; j++) //runs the comparison between values in the array
			{
				if(data[i] == data[j])
				{
					currentCount++;
					current = data[i];
				}
			}
			
			if(currentCount > modeCount)
			{
				modeCount = currentCount;
				//modes.add("" + data[i]);
			}
			else if(modeCount == currentCount)
			{
				modes.add("" + data[i]);
			}
		}
		
		return modes.toString();
		
	}
	
	public void printSolutions()
	{
		System.out.println("average: " + avg(data));
		System.out.println("standard deviation: " + sDev(data));
		//System.out.println("mode(s): " + mode(data));
		System.out.println(mode(data));
	}
	
}
