package mjhv.rectangleTesters;

import mjhv.shapes.Circle;
import mjhv.shapes.Rectangle;
import processing.core.PApplet;

public class DrawSurface extends PApplet{

	private Rectangle rectA, rectB, rectC, rectD, rectE;
	private Circle circ1;
	
	public DrawSurface()
	{
		//rectA = new Rectangle();
		rectB = new Rectangle(0, 80, 400, 160);
		rectC = new Rectangle(100, -100, 20, -300);
		rectD = new Rectangle(300, 100, 80, 80);
		
		circ1 = new Circle(60, 80, 100); 
		
		runSketch();
	}
	
	public void setup()
	{
		
	}
	
	public void draw()
	{
		background(255); 
		float x = width/400f;
		float y = height/300f;
		scale(x, y); //scales drawing 
		
		rectA.draw(this);
		rectB.draw(this);
		rectC.draw(this);
		rectD.draw(this);
		
		circ1.draw(this);
		
		/*
		System.out.println("rectB perimeter = " + rectB.getPerimeter());
		System.out.println("rectB area = " + rectB.getArea());
		System.out.println("rectB diagonal length = " + rectB.diagLength());
		System.out.println("is rectB a square?: " + rectB.isSquare());
		System.out.println("is rectD a square?: " + rectD.isSquare());
		 */
		 
		System.out.println("is point (60, 75) in circ1? " + circ1.isPointInside(60,75));
		System.out.println("is point (70, 83) in circ1? " + circ1.isPointInside(70, 83));
		System.out.println("circ1 area = " + circ1.calcArea());
		System.out.println("circ1 perimeter = " + circ1.calcPerimeter());
		
		
		
	}
	
}
